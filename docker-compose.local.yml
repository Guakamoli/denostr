services:
  denostr:
    build: .
    container_name: denostr
    environment:
      RELAY_PORT: 8008
      NOSTR_CONFIG_DIR: /app/.nostr
      MONGO_URI: "mongodb://denostr-db:27017/denostr?replicaSet=rs0"
      MONGO_MIN_POOL_SIZE: 4
      MONGO_MAX_POOL_SIZE: 16
      DEBUG: "*"
    user: deno:deno
    volumes:
      - ${PWD}/.nostr:/app/.nostr
    ports:
      - 8008:8008
    depends_on:
      denostr-db:
        condition: service_healthy
      denostr-db-rs-init:
        condition: service_completed_successfully
    restart: on-failure
    networks:
      default:
  denostr-db:
    image: mongo:5.0
    container_name: denostr-db
    networks:
      default:
    restart: always
    ports:
      - '27017:27017'
    volumes:
    - db:/data/db
    entrypoint: ["mongod", "--bind_ip_all", "--replSet", "rs0"]
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo --host 127.0.0.1 --port 27017 --quiet 1
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s
  denostr-db-rs-init:
    image: mongo:5.0
    container_name: denostr-db-rs-init
    environment:
      MONGO_URI: mongodb://denostr-db:27017/
    command: bash /data/mongo-rs-init.sh
    volumes:
    - ${PWD}/.docker/mongo-rs-init.local.sh:/data/mongo-rs-init.sh
    networks:
      default:
    depends_on:
      denostr-db:
        condition: service_healthy
  denostr-db-express:
    image: mongo-express:latest
    container_name: denostr-db-express
    environment:
      ME_CONFIG_OPTIONS_EDITORTHEME: ambiance
      ME_CONFIG_MONGODB_SERVER: denostr-db
      ME_CONFIG_MONGODB_PORT: 27017
    restart: always
    ports:
      - '8081:8081'
    networks:
      default:
    depends_on:
      denostr-db:
        condition: service_healthy
      denostr-db-rs-init:
        condition: service_completed_successfully

networks:
  default:
    name: denostr
    ipam:
      driver: default
      config:
        - subnet: 10.10.10.0/24

volumes:
  db:
